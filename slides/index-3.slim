h3.center
	span.nonsplit Hastega: Elixirプログラミングにおける超並列化を
	span.nonsplit 実現するためのGPGPU活用手法
h4.center
  span.nonsplit
    span.heading 山崎 進 &nbsp;
  span.nonsplit
    span.heading 森 正和 &nbsp;
  span.nonsplit
    span.heading 上野 嘉大 &nbsp;
  span.nonsplit
    span.heading 高瀬 英希 &nbsp;
  img.heading30 src="resources/images/fukuokaex_logo_only_original.png"
.small
  markdown:
    * ElixirではFlowを用いた簡潔な表現でマルチコアCPUの並列性を活用できる
    * Flowによるプログラム記述がGPGPUにも容易に適用できるという着想を得た
    * **この着想をHastegaとして実装を試みた**
  p.center ↓
  markdown:
    * 素体のロジスティック写像を用いたベンチマークプログラムを開発し評価した
      1. 提案手法はElixir単体のコードと比べて4.43〜8.23倍高速になった
      2. 提案手法はGPUを使用するネイティブコードと比べ，1.48〜1.54倍遅くなっただけである
      3. 提案手法はGPUを使用するPythonのコードと比べ，3.67倍高速である
    * また，提案手法はPythonと比べて設定が容易である
  p.center ↓
  markdown:
    * 機械学習のデファクトスタンダードであるPythonと比べてElixirの潜在的優位性が示された
    * 今後，提案手法を用いてPythonより性能優位な機械学習のライブラリを開発したい
    * ErlangVMに代わる新しい処理系ZEAMを開発する