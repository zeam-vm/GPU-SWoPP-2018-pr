h2 アイデア

.relative
	pre
		code.lang-elixir.hljs.large
			| 0..10000
			= "\n"
			| |> Flow.from_enumerable
			= "\n"
			| |> Flow.map(foo)
			= "\n"
			| |> Flow.map(bar)
			= "\n"
			| |> Enum.to_list
	svg.absolute width="864" height="180" viewBox="0, 0, 864, 180"
		ellipse cx="100" cy="24" rx="70" ry="15" stroke="pink" fill="none" stroke-width="5"
		text x="200" y="30" fill="pink" font-size="16px" 単純で均質で大量にあるデータ
		ellipse cx="210" cy="110" rx="30" ry="40" stroke="pink" fill="none" stroke-width="5"
		text x="250" y="110" fill="pink" font-size="16px" 同じような命令列
		text x="400" y="90" fill="yellow" font-size="24px" 容易にSIMD命令に変換できる

pre
	code.lang-c.hljs.large
		| __kernel void calc(
		= "\n"
		|   __global long* input,
		= "\n"
		|   __global long* output) {
		= "\n"
		|   size_t i = get_global_id(0);
		= "\n"
		|   long temp = input[i];
		= "\n"
		|   temp = foo(temp);        # 実際には関数呼出しをインライン展開する
		= "\n"
		|   temp = bar(temp);        # ことで，さらなる最適化を促進する
		= "\n"
		|   output[i] = temp;
		= "\n"
		| }
